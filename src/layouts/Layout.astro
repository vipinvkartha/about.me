---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Professional profile and portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  html {
    font-family: 'Inter', system-ui, sans-serif;
    background: #09090b;
    color-scheme: dark;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    min-height: 100vh;
  }

  * {
    box-sizing: border-box;
  }

  section {
    opacity: 0;
    animation: fadeIn 0.5s ease-out forwards;
  }

  @keyframes fadeIn {
    from { 
      opacity: 0; 
      transform: translateY(10px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }

  section:nth-child(1) { animation-delay: 0.1s; }
  section:nth-child(2) { animation-delay: 0.2s; }
  section:nth-child(3) { animation-delay: 0.3s; }

  /* Timeline styles */
  @media (min-width: 768px) {
    .md\:pr-1/2 {
      width: 50%;
      padding-right: 0;
      margin-right: auto;
    }

    .md\:pl-1/2 {
      width: 50%;
      padding-left: 0;
      margin-left: auto;
    }
  }

  /* Add smooth reveal animation for timeline items */
  .experience-item {
    opacity: 0;
    transform: translateY(20px);
    animation: slideUp 0.5s ease forwards;
  }

  @keyframes slideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Scroll reveal animations */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Section hover effects */
  section {
    position: relative;
    transition: all 0.3s ease;
  }

  section::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 0.5rem;
    pointer-events: none;
    transition: all 0.3s ease;
    opacity: 0;
    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  section:hover::after {
    opacity: 1;
    box-shadow: 
      0 0 0 1px rgba(255, 255, 255, 0.2),
      0 4px 20px -4px rgba(0, 0, 0, 0.1);
  }

  /* Remove the previous section animation styles */
  section {
    opacity: 1;
    animation: none;
  }

  /* Update timeline animations */
  .experience-item {
    opacity: 0;
    transform: translateY(20px);
  }

  .experience-item.revealed {
    opacity: 1;
    transform: translateY(0);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Experience card hover effects */
  .experience-card {
    perspective: 1000px;
  }

  .experience-content {
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    backface-visibility: hidden;
  }

  .experience-card:hover .experience-content {
    transform: translateZ(20px) scale(1.05);
    box-shadow: 
      0 0 0 1px rgba(255, 255, 255, 0.2),
      0 10px 30px -10px rgba(0, 0, 0, 0.5);
    z-index: 10;
  }

  /* Dim other cards when one is hovered */
  .experience-card:hover ~ .experience-card .experience-content {
    opacity: 0.5;
    transform: translateZ(-20px);
  }

  /* Scroll reveal for experience cards */
  .experience-card {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .experience-card.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Add delay to each card's reveal */
  .experience-card:nth-child(1) { transition-delay: 0.1s; }
  .experience-card:nth-child(2) { transition-delay: 0.2s; }
  .experience-card:nth-child(3) { transition-delay: 0.3s; }
  .experience-card:nth-child(4) { transition-delay: 0.4s; }
  .experience-card:nth-child(5) { transition-delay: 0.5s; }
  .experience-card:nth-child(6) { transition-delay: 0.6s; }

  /* Remove conflicting animations */
  .experience-item {
    animation: none;
  }

  /* Section Cards 3D Effect */
  .section-card {
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .section-content {
    background: rgba(24, 24, 27, 0.6);
    border: 1px solid rgba(63, 63, 70, 0.4);
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    backface-visibility: hidden;
  }

  .section-card:hover .section-content {
    transform: translateZ(30px) scale(1.02);
    border-color: rgba(113, 113, 122, 0.4);
    box-shadow: 
      0 0 0 1px rgba(255, 255, 255, 0.1),
      0 20px 40px -20px rgba(0, 0, 0, 0.5);
    background: rgba(39, 39, 42, 0.8);
  }

  /* Dim other sections when one is hovered */
  .section-card:hover ~ .section-card .section-content {
    opacity: 0.5;
    transform: translateZ(-20px);
    filter: blur(1px);
  }

  /* Experience cards within sections */
  .experience-content {
    background: rgba(24, 24, 27, 0.4);
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .experience-card:hover .experience-content {
    transform: translateZ(40px) scale(1.03);
    background: rgba(39, 39, 42, 0.9);
    box-shadow: 
      0 0 0 1px rgba(255, 255, 255, 0.2),
      0 20px 40px -20px rgba(0, 0, 0, 0.5);
    z-index: 20;
  }

  /* Scroll reveal animations with stagger */
  .section-card {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .section-card.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Stagger the reveal of sections */
  .section-card:nth-child(1) { transition-delay: 0.1s; }
  .section-card:nth-child(2) { transition-delay: 0.2s; }
  .section-card:nth-child(3) { transition-delay: 0.3s; }
  .section-card:nth-child(4) { transition-delay: 0.4s; }

  /* Add glow effect on hover */
  .section-content::before {
    content: '';
    position: absolute;
    inset: -1px;
    background: linear-gradient(
      45deg,
      transparent 0%,
      rgba(255, 255, 255, 0.1) 100%
    );
    z-index: -1;
    transition: opacity 0.5s ease;
    opacity: 0;
    border-radius: inherit;
  }

  .section-card:hover .section-content::before {
    opacity: 1;
  }

  /* Ensure proper stacking */
  .section-card {
    position: relative;
    z-index: 1;
  }

  .section-card:hover {
    z-index: 2;
  }

  /* Remove conflicting styles */
  section {
    opacity: 1;
    animation: none;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Improved focus styles */
  .section-content:focus-within {
    outline: none;
    box-shadow: 
      0 0 0 2px rgba(255, 255, 255, 0.2),
      0 20px 40px -20px rgba(0, 0, 0, 0.5);
  }

  /* Experience Carousel Styles */
  .experience-carousel {
    position: relative;
    width: 100%;
  }

  .experience-track {
    display: flex;
    width: 100%;
  }

  .experience-slide {
    width: 100%;
    flex-shrink: 0;
    padding: 0.5rem;
  }

  /* Smooth out the hover effect for slides */
  .experience-content {
    height: 100%;
    transform: translateZ(0);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .experience-slide:hover .experience-content {
    transform: translateZ(30px) scale(1.02);
    background: rgba(39, 39, 42, 0.9);
    box-shadow: 
      0 0 0 1px rgba(255, 255, 255, 0.2),
      0 20px 40px -20px rgba(0, 0, 0, 0.5);
  }

  /* Indicator animations */
  .exp-indicator {
    transition: all 0.3s ease;
  }

  .exp-indicator:hover {
    background-color: rgba(161, 161, 170, 0.5) !important;
  }

  /* Profile image styles */
  .profile-image-container {
    position: relative;
    transition: transform 0.3s ease;
  }

  .profile-image-container::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 50%;
    border: 2px solid transparent;
    background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.2)) border-box;
    -webkit-mask: 
      linear-gradient(#fff 0 0) padding-box, 
      linear-gradient(#fff 0 0);
    mask: 
      linear-gradient(#fff 0 0) padding-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .profile-image-container:hover::after {
    opacity: 1;
  }
</style>